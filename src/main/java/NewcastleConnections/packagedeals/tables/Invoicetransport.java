/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables;


import NewcastleConnections.packagedeals.Keys;
import NewcastleConnections.packagedeals.Packagedeals;
import NewcastleConnections.packagedeals.tables.records.InvoicetransportRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invoicetransport extends TableImpl<InvoicetransportRecord> {

    private static final long serialVersionUID = -957220940;

    /**
     * The reference instance of <code>PackageDeals.InvoiceTransport</code>
     */
    public static final Invoicetransport INVOICETRANSPORT = new Invoicetransport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoicetransportRecord> getRecordType() {
        return InvoicetransportRecord.class;
    }

    /**
     * The column <code>PackageDeals.InvoiceTransport.invoiceId</code>.
     */
    public final TableField<InvoicetransportRecord, UInteger> INVOICEID = createField("invoiceId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.InvoiceTransport.transportId</code>.
     */
    public final TableField<InvoicetransportRecord, UInteger> TRANSPORTID = createField("transportId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.InvoiceTransport.time</code>.
     */
    public final TableField<InvoicetransportRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PackageDeals.InvoiceTransport.price</code>.
     */
    public final TableField<InvoicetransportRecord, Double> PRICE = createField("price", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>PackageDeals.InvoiceTransport</code> table reference
     */
    public Invoicetransport() {
        this("InvoiceTransport", null);
    }

    /**
     * Create an aliased <code>PackageDeals.InvoiceTransport</code> table reference
     */
    public Invoicetransport(String alias) {
        this(alias, INVOICETRANSPORT);
    }

    private Invoicetransport(String alias, Table<InvoicetransportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invoicetransport(String alias, Table<InvoicetransportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Packagedeals.PACKAGEDEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvoicetransportRecord> getPrimaryKey() {
        return Keys.KEY_INVOICETRANSPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvoicetransportRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoicetransportRecord>>asList(Keys.KEY_INVOICETRANSPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InvoicetransportRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoicetransportRecord, ?>>asList(Keys.ITINVOICE, Keys.ITTRANSPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invoicetransport as(String alias) {
        return new Invoicetransport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invoicetransport rename(String name) {
        return new Invoicetransport(name, null);
    }
}
