/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables;


import NewcastleConnections.packagedeals.Keys;
import NewcastleConnections.packagedeals.Packagedeals;
import NewcastleConnections.packagedeals.tables.records.RoomofferingallocationsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roomofferingallocations extends TableImpl<RoomofferingallocationsRecord> {

    private static final long serialVersionUID = -191174342;

    /**
     * The reference instance of <code>PackageDeals.RoomOfferingAllocations</code>
     */
    public static final Roomofferingallocations ROOMOFFERINGALLOCATIONS = new Roomofferingallocations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoomofferingallocationsRecord> getRecordType() {
        return RoomofferingallocationsRecord.class;
    }

    /**
     * The column <code>PackageDeals.RoomOfferingAllocations.id</code>.
     */
    public final TableField<RoomofferingallocationsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingAllocations.fromDate</code>.
     */
    public final TableField<RoomofferingallocationsRecord, Timestamp> FROMDATE = createField("fromDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingAllocations.toDate</code>.
     */
    public final TableField<RoomofferingallocationsRecord, Timestamp> TODATE = createField("toDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingAllocations.quantity</code>.
     */
    public final TableField<RoomofferingallocationsRecord, UInteger> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingAllocations.roomOfferingId</code>.
     */
    public final TableField<RoomofferingallocationsRecord, UInteger> ROOMOFFERINGID = createField("roomOfferingId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>PackageDeals.RoomOfferingAllocations</code> table reference
     */
    public Roomofferingallocations() {
        this("RoomOfferingAllocations", null);
    }

    /**
     * Create an aliased <code>PackageDeals.RoomOfferingAllocations</code> table reference
     */
    public Roomofferingallocations(String alias) {
        this(alias, ROOMOFFERINGALLOCATIONS);
    }

    private Roomofferingallocations(String alias, Table<RoomofferingallocationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roomofferingallocations(String alias, Table<RoomofferingallocationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Packagedeals.PACKAGEDEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoomofferingallocationsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ROOMOFFERINGALLOCATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoomofferingallocationsRecord> getPrimaryKey() {
        return Keys.KEY_ROOMOFFERINGALLOCATIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoomofferingallocationsRecord>> getKeys() {
        return Arrays.<UniqueKey<RoomofferingallocationsRecord>>asList(Keys.KEY_ROOMOFFERINGALLOCATIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoomofferingallocationsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoomofferingallocationsRecord, ?>>asList(Keys.FK_ROOMOFFERINGALLOCATION_ROOMOFFERING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roomofferingallocations as(String alias) {
        return new Roomofferingallocations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roomofferingallocations rename(String name) {
        return new Roomofferingallocations(name, null);
    }
}
