/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables;


import NewcastleConnections.packagedeals.Keys;
import NewcastleConnections.packagedeals.Packagedeals;
import NewcastleConnections.packagedeals.tables.records.RoomofferingratesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roomofferingrates extends TableImpl<RoomofferingratesRecord> {

    private static final long serialVersionUID = -471409982;

    /**
     * The reference instance of <code>PackageDeals.RoomOfferingRates</code>
     */
    public static final Roomofferingrates ROOMOFFERINGRATES = new Roomofferingrates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoomofferingratesRecord> getRecordType() {
        return RoomofferingratesRecord.class;
    }

    /**
     * The column <code>PackageDeals.RoomOfferingRates.id</code>.
     */
    public final TableField<RoomofferingratesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.adultQty</code>.
     */
    public final TableField<RoomofferingratesRecord, UInteger> ADULTQTY = createField("adultQty", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.childQty</code>.
     */
    public final TableField<RoomofferingratesRecord, UInteger> CHILDQTY = createField("childQty", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.rate</code>.
     */
    public final TableField<RoomofferingratesRecord, Double> RATE = createField("rate", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.appliesFrom</code>.
     */
    public final TableField<RoomofferingratesRecord, Timestamp> APPLIESFROM = createField("appliesFrom", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.appliedTo</code>.
     */
    public final TableField<RoomofferingratesRecord, Timestamp> APPLIEDTO = createField("appliedTo", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.validFrom</code>.
     */
    public final TableField<RoomofferingratesRecord, Timestamp> VALIDFROM = createField("validFrom", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.validTo</code>.
     */
    public final TableField<RoomofferingratesRecord, Timestamp> VALIDTO = createField("validTo", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferingRates.roomOfferingId</code>.
     */
    public final TableField<RoomofferingratesRecord, UInteger> ROOMOFFERINGID = createField("roomOfferingId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>PackageDeals.RoomOfferingRates</code> table reference
     */
    public Roomofferingrates() {
        this("RoomOfferingRates", null);
    }

    /**
     * Create an aliased <code>PackageDeals.RoomOfferingRates</code> table reference
     */
    public Roomofferingrates(String alias) {
        this(alias, ROOMOFFERINGRATES);
    }

    private Roomofferingrates(String alias, Table<RoomofferingratesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roomofferingrates(String alias, Table<RoomofferingratesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Packagedeals.PACKAGEDEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoomofferingratesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ROOMOFFERINGRATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoomofferingratesRecord> getPrimaryKey() {
        return Keys.KEY_ROOMOFFERINGRATES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoomofferingratesRecord>> getKeys() {
        return Arrays.<UniqueKey<RoomofferingratesRecord>>asList(Keys.KEY_ROOMOFFERINGRATES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoomofferingratesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoomofferingratesRecord, ?>>asList(Keys.FK_ROOMOFFERINGRATE_ROOMOFFERING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roomofferingrates as(String alias) {
        return new Roomofferingrates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roomofferingrates rename(String name) {
        return new Roomofferingrates(name, null);
    }
}
