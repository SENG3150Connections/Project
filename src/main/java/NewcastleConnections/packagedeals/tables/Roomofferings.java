/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables;


import NewcastleConnections.packagedeals.Keys;
import NewcastleConnections.packagedeals.Packagedeals;
import NewcastleConnections.packagedeals.tables.records.RoomofferingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roomofferings extends TableImpl<RoomofferingsRecord> {

    private static final long serialVersionUID = -825817907;

    /**
     * The reference instance of <code>PackageDeals.RoomOfferings</code>
     */
    public static final Roomofferings ROOMOFFERINGS = new Roomofferings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoomofferingsRecord> getRecordType() {
        return RoomofferingsRecord.class;
    }

    /**
     * The column <code>PackageDeals.RoomOfferings.id</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.noGuestMax</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> NOGUESTMAX = createField("noGuestMax", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.noAdultMax</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> NOADULTMAX = createField("noAdultMax", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.noChildMax</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> NOCHILDMAX = createField("noChildMax", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.description</code>.
     */
    public final TableField<RoomofferingsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.hotelId</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> HOTELID = createField("hotelId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.roomTypeId</code>.
     */
    public final TableField<RoomofferingsRecord, UInteger> ROOMTYPEID = createField("roomTypeId", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>PackageDeals.RoomOfferings.title</code>.
     */
    public final TableField<RoomofferingsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>PackageDeals.RoomOfferings</code> table reference
     */
    public Roomofferings() {
        this("RoomOfferings", null);
    }

    /**
     * Create an aliased <code>PackageDeals.RoomOfferings</code> table reference
     */
    public Roomofferings(String alias) {
        this(alias, ROOMOFFERINGS);
    }

    private Roomofferings(String alias, Table<RoomofferingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roomofferings(String alias, Table<RoomofferingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Packagedeals.PACKAGEDEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoomofferingsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ROOMOFFERINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoomofferingsRecord> getPrimaryKey() {
        return Keys.KEY_ROOMOFFERINGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoomofferingsRecord>> getKeys() {
        return Arrays.<UniqueKey<RoomofferingsRecord>>asList(Keys.KEY_ROOMOFFERINGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoomofferingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoomofferingsRecord, ?>>asList(Keys.FK_ROOMOFFERING_HOTEL, Keys.FK_ROOMOFFERING_ROOMTYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roomofferings as(String alias) {
        return new Roomofferings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roomofferings rename(String name) {
        return new Roomofferings(name, null);
    }
}
