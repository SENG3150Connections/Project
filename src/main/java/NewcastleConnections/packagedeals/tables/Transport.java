/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables;


import NewcastleConnections.packagedeals.Keys;
import NewcastleConnections.packagedeals.Packagedeals;
import NewcastleConnections.packagedeals.tables.records.TransportRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transport extends TableImpl<TransportRecord> {

    private static final long serialVersionUID = 110482414;

    /**
     * The reference instance of <code>PackageDeals.Transport</code>
     */
    public static final Transport TRANSPORT = new Transport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransportRecord> getRecordType() {
        return TransportRecord.class;
    }

    /**
     * The column <code>PackageDeals.Transport.id</code>.
     */
    public final TableField<TransportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PackageDeals.Transport.name</code>.
     */
    public final TableField<TransportRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

    /**
     * The column <code>PackageDeals.Transport.ticketPrice</code>.
     */
    public final TableField<TransportRecord, Double> TICKETPRICE = createField("ticketPrice", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PackageDeals.Transport.return</code>.
     */
    public final TableField<TransportRecord, Byte> RETURN = createField("return", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>PackageDeals.Transport.description</code>.
     */
    public final TableField<TransportRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "");

    /**
     * The column <code>PackageDeals.Transport.destinationLongitude</code>.
     */
    public final TableField<TransportRecord, Double> DESTINATIONLONGITUDE = createField("destinationLongitude", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>PackageDeals.Transport.destinationLattitude</code>.
     */
    public final TableField<TransportRecord, Double> DESTINATIONLATTITUDE = createField("destinationLattitude", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>PackageDeals.Transport.startLongitude</code>.
     */
    public final TableField<TransportRecord, Double> STARTLONGITUDE = createField("startLongitude", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>PackageDeals.Transport.startLattitude</code>.
     */
    public final TableField<TransportRecord, Double> STARTLATTITUDE = createField("startLattitude", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * Create a <code>PackageDeals.Transport</code> table reference
     */
    public Transport() {
        this("Transport", null);
    }

    /**
     * Create an aliased <code>PackageDeals.Transport</code> table reference
     */
    public Transport(String alias) {
        this(alias, TRANSPORT);
    }

    private Transport(String alias, Table<TransportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transport(String alias, Table<TransportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Packagedeals.PACKAGEDEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransportRecord> getPrimaryKey() {
        return Keys.KEY_TRANSPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransportRecord>> getKeys() {
        return Arrays.<UniqueKey<TransportRecord>>asList(Keys.KEY_TRANSPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transport as(String alias) {
        return new Transport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Transport rename(String name) {
        return new Transport(name, null);
    }
}
