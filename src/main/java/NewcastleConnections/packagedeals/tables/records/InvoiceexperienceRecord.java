/*
 * This file is generated by jOOQ.
*/
package NewcastleConnections.packagedeals.tables.records;


import NewcastleConnections.packagedeals.tables.Invoiceexperience;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceexperienceRecord extends UpdatableRecordImpl<InvoiceexperienceRecord> implements Record3<UInteger, UInteger, Double> {

    private static final long serialVersionUID = 1272416237;

    /**
     * Setter for <code>PackageDeals.InvoiceExperience.invoiceId</code>.
     */
    public void setInvoiceid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>PackageDeals.InvoiceExperience.invoiceId</code>.
     */
    public UInteger getInvoiceid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>PackageDeals.InvoiceExperience.experienceVoucherId</code>.
     */
    public void setExperiencevoucherid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>PackageDeals.InvoiceExperience.experienceVoucherId</code>.
     */
    public UInteger getExperiencevoucherid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>PackageDeals.InvoiceExperience.price</code>.
     */
    public void setPrice(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>PackageDeals.InvoiceExperience.price</code>.
     */
    public Double getPrice() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Invoiceexperience.INVOICEEXPERIENCE.INVOICEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Invoiceexperience.INVOICEEXPERIENCE.EXPERIENCEVOUCHERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Invoiceexperience.INVOICEEXPERIENCE.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getInvoiceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getExperiencevoucherid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceexperienceRecord value1(UInteger value) {
        setInvoiceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceexperienceRecord value2(UInteger value) {
        setExperiencevoucherid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceexperienceRecord value3(Double value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceexperienceRecord values(UInteger value1, UInteger value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceexperienceRecord
     */
    public InvoiceexperienceRecord() {
        super(Invoiceexperience.INVOICEEXPERIENCE);
    }

    /**
     * Create a detached, initialised InvoiceexperienceRecord
     */
    public InvoiceexperienceRecord(UInteger invoiceid, UInteger experiencevoucherid, Double price) {
        super(Invoiceexperience.INVOICEEXPERIENCE);

        set(0, invoiceid);
        set(1, experiencevoucherid);
        set(2, price);
    }
}
